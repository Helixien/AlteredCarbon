<?xml version="1.0" encoding="utf-8"?>
<LanguageData>
	<!-- ================================ Stacks ====================== -->
	<AC.InstallStack>Implant neural stack</AC.InstallStack>
	<AC.InstallStackDesc>Select a pawn or empty sleeve to implant the neural stack in via surgery. The surgery will automatically be created in the health tab of the selected pawn or sleeve.</AC.InstallStackDesc>
	<AC.InstallEmptyStackDesc>Select a pawn to implant the empty neural stack in via surgery. The surgery will automatically be created in the health tab of the selected pawn or sleeve.</AC.InstallEmptyStackDesc>
	<AC.InstallArchotechStack>Implant archotech stack</AC.InstallArchotechStack>
	<AC.InstallArchotechStackDesc>Select a pawn or empty sleeve to implant the archotech stack in via surgery. The surgery will automatically be created in the health tab of the selected pawn or sleeve.</AC.InstallArchotechStackDesc>
	<AC.InstallEmptyArchotechStackDesc>Select a pawn to implant the empty archotech stack in via surgery. The surgery will automatically be created in the health tab of the selected pawn or sleeve.</AC.InstallEmptyArchotechStackDesc>
	<AC.DesignatorExtractStack>Extract stack</AC.DesignatorExtractStack>
	<AC.DesignatorExtractStackDesc>Extract neural stacks from dead bodies</AC.DesignatorExtractStackDesc>
	<AC.MessageMustDesignateHasStack>The body should have a neural stack</AC.MessageMustDesignateHasStack>
	<AC.ExtractStack>Extract stack</AC.ExtractStack>
	<AC.Faction>Faction</AC.Faction>
	<AC.Childhood>Childhood</AC.Childhood>
	<AC.Adulthood>Adulthood</AC.Adulthood>
	<AC.AgeChronologicalTicks>Chronological age</AC.AgeChronologicalTicks>
	<AC.DestroyStackConfirmation>Destroying Stack:\nWARNING! You are about to destroy this stack. Are you sure you want to continue?</AC.DestroyStackConfirmation>
	<AC.ScenPart_PawnsHaveNeuralStack>{0} have a {1} chance of starting with a {2}.</AC.ScenPart_PawnsHaveNeuralStack>
	<AC.AutoLoad>Auto-load</AC.AutoLoad>
	<AC.AutoLoadDesc>If active, haulers will automatically store this neural print in a neural matrix.</AC.AutoLoadDesc>
	<AC.SleeveWithStack>Sleeve with stack installed inside.</AC.SleeveWithStack>
	<AC.PawnAlreadyHasStack>{PAWN_nameDef} already has a neural stack installed!</AC.PawnAlreadyHasStack>
	<AC.PawnAlreadyHasArchotechStack>{PAWN_nameDef} already has an archotech stack installed!</AC.PawnAlreadyHasArchotechStack>
	<AC.PawnStackCannotDowngrade>{PAWN_nameDef} already has an archotech stack installed!</AC.PawnStackCannotDowngrade>
	<AC.CannotInstallStackNeckIsMissingOrAnotherImplantInstalled>Cannot install neural stack - neck is missing or another implant installed in the neck.</AC.CannotInstallStackNeckIsMissingOrAnotherImplantInstalled>
	<AC.EjectAllNeuralStacksDesc>Drop all contained neural stacks onto the ground.</AC.EjectAllNeuralStacksDesc>
	<AC.NeuralStacksStored>Neural stacks stored: {0}/{1}</AC.NeuralStacksStored>
	<!-- ================================ Prints ====================== -->
	<AC.AllowAutomaticRestoration>Allow automatic restoration</AC.AllowAutomaticRestoration>
	<AC.AllowAutomaticRestorationDesc>Toggle this button to allow/disallow automatic restoration.</AC.AllowAutomaticRestorationDesc>
	<AC.RestoringQueued>Restoring queued: {PAWN_nameDef} </AC.RestoringQueued>
	<AC.RestoringQueuedDesc>Stack of {PAWN_nameDef} has been destroyed. {PAWN_possessive} latest neural print backup has been queued to be restored.</AC.RestoringQueuedDesc>
	<!-- ================================ Sleeves ====================== -->
	<AC.EmptySleeve>Empty sleeve</AC.EmptySleeve>
	<AC.SleeveDeath>Sleeve Death</AC.SleeveDeath>
	<AC.PawnDiedBecauseOf>Sleeve of {PAWN_labelShort} has died. Cause: {1}.</AC.PawnDiedBecauseOf>
	<AC.PawnDied>Sleeve of {1_labelShort} has died.</AC.PawnDied>
	<AC.SleveOf>Sleeve of </AC.SleveOf>
	<AC.TakeToSleeveCasketOrMedicalBed>Take empty sleeve to sleeve casket or medical bed</AC.TakeToSleeveCasketOrMedicalBed>
	<AC.CannotTakeToSleeveCasketOrMedicalBed>Cannot take: No reachable, un-reserved sleeve casket or medical bed in safe temperature.</AC.CannotTakeToSleeveCasketOrMedicalBed>
	<!-- ================================ Sleeve Incubator ====================== -->
	<AC.CreateSleeveBody>Grow sleeve</AC.CreateSleeveBody>
	<AC.SleeveCustomization>Sleeve Customization</AC.SleeveCustomization>
	<AC.NoSleeve>No Sleeve</AC.NoSleeve>
	<AC.Sleeve>Sleeve</AC.Sleeve>
	<AC.CreateSleeveBodyDesc>Create a new baseliner or xenotype sleeve using available xenogerms.</AC.CreateSleeveBodyDesc>
	<AC.GeneOptions>Gene options</AC.GeneOptions>
	<AC.BodyOptions>Body options</AC.BodyOptions>
	<AC.XenogermExplanation>Selected xenogerm will be consumed in the process. If no xenogerm is selected, the sleeve will be grown as a "Baseliner".</AC.XenogermExplanation>
	<AC.GeneOptionsExplanation>Available options depend on the genes of the selected xenogerm. Chosen options will be used as active genes, while conflicting ones will be dormant.</AC.GeneOptionsExplanation>
	<AC.BodyOptionsExplanation>Baseliner skins and hair colour options are always available. Chosen options will be used as active genes, while conflicting ones will be dormant.</AC.BodyOptionsExplanation>
	<AC.ConvertGenesToGermline>Grow non-archotech genes in xenogerm as germline genes: </AC.ConvertGenesToGermline>
	<AC.PowerSleeveWillBeLostIn>Due to lack of power, the sleeve will be lost in {0}.</AC.PowerSleeveWillBeLostIn>
	<AC.FuelSleeveWillBeLostIn>Due to lack of neutroamine, the sleeve will be lost in {0}.</AC.FuelSleeveWillBeLostIn>
	<AC.FuelSleeveWillBeDeteriorated>Due to lack of neutroamine, the sleeve will begin to deteriorate in {0}</AC.FuelSleeveWillBeDeteriorated>
	<AC.FuelSleeveIsDeteriorating>Due to lack of neutroamine, the sleeve is deteriorating.</AC.FuelSleeveIsDeteriorating>
	<AC.Race>Race</AC.Race>
	<AC.Xenotype>Xenotype</AC.Xenotype>
	<AC.SleeveQuality>Sleeve quality</AC.SleeveQuality>
	<AC.SleeveBeauty>Sleeve beauty</AC.SleeveBeauty>
	<AC.SleeveCustomizationExplanation>When you press Accept, a sleeve will begin growing in this Sleeve incubator. During growth, it will require a constant power connection as well as neutroamine connection via neutro pipes. When the timer finishes, a Sleeve can be extracted and either used straight-away, or inserted into a Sleeve casket.</AC.SleeveCustomizationExplanation>
	<AC.SaveTemplate>Save template</AC.SaveTemplate>
	<AC.LoadTemplate>Load template</AC.LoadTemplate>
	<AC.CancelSleeveBodyGrowing>Cancel the sleeve growing process.</AC.CancelSleeveBodyGrowing>
	<AC.CancelSleeveBodyGrowingDesc>Cancel sleeve growing.</AC.CancelSleeveBodyGrowingDesc>
	<AC.BodyShape>Body shape</AC.BodyShape>
	<AC.Cancel>Cancel</AC.Cancel>
	<AC.GrowthProgress>Growth progress: </AC.GrowthProgress>
	<AC.HairColour>Hair colour</AC.HairColour>
	<AC.HairType>Hair type</AC.HairType>
	<AC.HeadShape>Head shape</AC.HeadShape>
	<AC.BeardType>Beard type</AC.BeardType>
	<AC.SkinColour>Skin colour</AC.SkinColour>
	<AC.TimeToGrow>Total time to grow: {0}</AC.TimeToGrow>
	<AC.GrowCost>Total neutroamine needed: {0}</AC.GrowCost>
	<AC.SelectRace>Select race</AC.SelectRace>
	<AC.CloneSleeve>Clone sleeve</AC.CloneSleeve>
	<AC.CloneSleeveDesc>Create a sleeve based on an existing pawn, including endogenes.</AC.CloneSleeveDesc>
	<AC.IsRunningOutFuel>Sleeve incubator is running out neutroamine</AC.IsRunningOutFuel>
	<AC.IsRunningOutPower>Sleeve incubator is running out power</AC.IsRunningOutPower>
	<AC.SleeveInIncubatorIsDead>Sleeve body in the incubator is dead</AC.SleeveInIncubatorIsDead>
	<AC.RepurposeCorpse>Repurpose corpse</AC.RepurposeCorpse>
	<AC.RepurposeCorpseDesc>Repurpose a not fully rotten corpse and turn it into an empty sleeve.</AC.RepurposeCorpseDesc>
	<AC.SleeveGrowerIsOccupied>Sleeve grower is occupied.</AC.SleeveGrowerIsOccupied>
	<AC.CancelRepurposingCorpse>Cancel repurposing corpse</AC.CancelRepurposingCorpse>
	<AC.CancelRepurposingCorpseDesc>Cancel repurposing corpse into a empty sleeve.</AC.CancelRepurposingCorpseDesc>
	<AC.NeuralStackMustBeRemovedFirst>Neural stack must be removed first.</AC.NeuralStackMustBeRemovedFirst>
	<AC.CannotRepurposeCorspeWithoutHead>Cannot repurpose corpse with missing head.</AC.CannotRepurposeCorspeWithoutHead>
	<AC.SleeveDesignCouldntBeFullyLoaded>Saved Sleeve Design could not be fully loaded. Missing required xenogerm!</AC.SleeveDesignCouldntBeFullyLoaded>
	<AC.PawnBodyCouldntBeFullyCopied>A {PAWN_nameDef} body couldn't be copied fully. The following xenogenes were skipped: {1}</AC.PawnBodyCouldntBeFullyCopied>
	<AC.StartGrowing>Start growing</AC.StartGrowing>
	<AC.FinishedGrowingSleeve>Sleeve Incubator: Finished growing sleeve!</AC.FinishedGrowingSleeve>
	<AC.SleeveAge>Age:</AC.SleeveAge>
	<AC.YearsOld>{0} years old</AC.YearsOld>
	<!-- ================================ Neural Matrix ====================== -->
	<AC.TimeOfBackup>Time of backup: {0}</AC.TimeOfBackup>
	<AC.EjectNeuralPrintTooltip>Eject this neural print from the matrix.</AC.EjectNeuralPrintTooltip>
	<AC.EjectNeuralPrintConfirmation>Do you really want to eject {0}? It will be immediately ejected onto the ground nearby.</AC.EjectNeuralPrintConfirmation>
	<AC.EraseNeuralPrintTooltip>Erase this neural print irreversibly.</AC.EraseNeuralPrintTooltip>
	<AC.EraseNeuralPrintConfirmation>Do you really want to erase {0}? It will be immediately destroyed.</AC.EraseNeuralPrintConfirmation>
	<AC.NeuralPrintStorage>Contents</AC.NeuralPrintStorage>
	<AC.NeuralPrintsStored>Neural prints stored: {0}/{1}</AC.NeuralPrintsStored>
	<AC.LastBackup>Last Backup: {0}</AC.LastBackup>
	<AC.AllowColonistNeuralPrints>*Allow colonist neural prints</AC.AllowColonistNeuralPrints>
	<AC.AllowStrangerNeuralPrints>*Allow stranger neural prints</AC.AllowStrangerNeuralPrints>
	<AC.AllowHostileNeuralPrints>*Allow hostile neural prints</AC.AllowHostileNeuralPrints>
	<AC.EjectAll>Eject all</AC.EjectAll>
	<AC.EjectAllNeuralPrintsDesc>Drop all contained neural prints onto the ground.</AC.EjectAllNeuralPrintsDesc>
	<!-- ================================ Other ====================== -->
	<AC.CommandCallsNeuroformers>Call psylink neuroformers</AC.CommandCallsNeuroformers>
	<AC.SetBodyParts>Install body parts</AC.SetBodyParts>
	<AC.Copy>Copy</AC.Copy>
	<AC.Original>Original</AC.Original>
	<AC.Search>Search</AC.Search>
	<AC.AddFilter>Add filter</AC.AddFilter>
	<AC.IsEmptySleeve>Is empty sleeve</AC.IsEmptySleeve>
	<AC.OriginalGender>Original gender</AC.OriginalGender>
	<AC.ChargeCuirassierBelt>Charge cuirassier belt</AC.ChargeCuirassierBelt>
	<!-- ================================ Neural editor ====================== -->
	<AC.NoConnectedMatrix>Cannot use: No Neural Matrix nearby.</AC.NoConnectedMatrix>
	<AC.ConnectedMatrixHasNoPower>Cannot use: Connected Neural Matrix is not powered.</AC.ConnectedMatrixHasNoPower>
	<AC.WipingFriendlyStackWarning>Warning: The stack you are trying to factory reset does not belong to your faction.

If you erase the content from a non-colonist stack from another faction, their entire faction may become your enemy.</AC.WipingFriendlyStackWarning>
	<AC.DuplicatingFriendlyStackWarning>Warning: The stack you are trying to duplicate does not belong to your faction.

If you make a copy of the content from a non-colonist stack from another faction, their entire faction may become your enemy.</AC.DuplicatingFriendlyStackWarning>
	<AC.EditingFriendlyStackWarning>The stack you are trying to edit does not belong to your faction.

If you edit the content from a non-colonist stack from another faction, their entire faction may become your enemy.</AC.EditingFriendlyStackWarning>
	<AC.AlreadyOrderedToWipeStack>This stack is set for reseting already on a neural editor. Remove the bill in order to add new operation on it.</AC.AlreadyOrderedToWipeStack>
	<AC.AlreadyOrderedToEditStack>This stack is set for editing already on a neural editor. Remove the bill in order to add new operation on it.</AC.AlreadyOrderedToEditStack>
	<AC.AlreadyOrderedToDuplicateStack>This stack is set for duplicating already on a neural editor. Remove the bill in order to add new operation on it.</AC.AlreadyOrderedToDuplicateStack>
	<AC.AlreadyOrderedToRestoreStack>This print is set for restoring already on a neural editor. Remove the bill in order to add new operation on it.</AC.AlreadyOrderedToRestoreStack>
	<AC.ResettingBiocodedFailed>Resetting biocoded equipment: Failed, {0} destroyed!</AC.ResettingBiocodedFailed>
	<AC.ResettingBiocodedSuccess>Resetting biocoded equipment: Successful! {0} is unlocked.</AC.ResettingBiocodedSuccess>
	<AC.EditNeuralStack>Edit Neural Stack</AC.EditNeuralStack>
	<AC.NeuralStackEditExplanation>Neural Stacks feature advanced encryption to prevent outside forces from messing with the stored consciousness. Known exploits allow for some data to be edited and rewritten at the cost of stack degradation.</AC.NeuralStackEditExplanation>
	<AC.Backstories>Backstories</AC.Backstories>
	<AC.NoDisabledWorkTypes>No disabled work types</AC.NoDisabledWorkTypes>
	<AC.NoSkillPenalties>No skill penalties</AC.NoSkillPenalties>
	<AC.FactionAllegiance>Faction allegiance</AC.FactionAllegiance>
	<AC.RemoveUnwaveringLoyalTrait>Remove unwavering loyal trait:</AC.RemoveUnwaveringLoyalTrait>
	<AC.Ideology>Ideology</AC.Ideology>
	<AC.Belief>Belief</AC.Belief>
	<AC.Certainty>Certainty</AC.Certainty>
	<AC.ChangingPawnIdeologyWarning>Changing a pawn ideology will also remove any roles assosiated from them.</AC.ChangingPawnIdeologyWarning>
	<AC.TotalTimeToEdit>Total time to edit: {0}</AC.TotalTimeToEdit>
	<AC.TotalStackDegradation>Expected stack degradation: {0}</AC.TotalStackDegradation>
	<AC.Tutorial>WARNING: The more you edit,the higher the stack degradation will be, causing the stored pawns neurallity to become more and more unstable. Stack degradation will go away over time after being installed in a body, but can take years.</AC.Tutorial>
	<AC.ResetAll>Reset all</AC.ResetAll>
	<AC.StackDegradation>Stack degradation: {0}</AC.StackDegradation>
	<AC.StartEditing>Start editing</AC.StartEditing>
	<AC.CancelStackReset>Cancel stack reset</AC.CancelStackReset>
	<AC.CancelStackResetDesc>Cancel reseting neural stack.</AC.CancelStackResetDesc>
	<AC.CancelStackEdit>Cancel stack edit</AC.CancelStackEdit>
	<AC.CancelStackEditDesc>Cancel editing neural stack.</AC.CancelStackEditDesc>
	<AC.CancelStackDuplication>Cancel stack duplication</AC.CancelStackDuplication>
	<AC.CancelStackDuplicationDesc>Cancel stack duplicating.</AC.CancelStackDuplicationDesc>
	<AC.SuccessfullyRestoredStackFromBackup>{PAWN_nameDef} successfully restored neural stack from neural print.</AC.SuccessfullyRestoredStackFromBackup>
	<AC.EnableAutoRestore>Toggle automatic restoring</AC.EnableAutoRestore>
	<AC.EnableAutoRestoreDesc>Allow to automatically restore stacks from neural prints if a pawn with an installed neural stack dies.</AC.EnableAutoRestoreDesc>
	<AC.SuccessfullyDuplicatedStack>{PAWN_nameDef} successfully duplicated neural stack.</AC.SuccessfullyDuplicatedStack>
	<AC.FailedToDuplicatedStack>{PAWN_nameDef} failed to duplicate neural stack.</AC.FailedToDuplicatedStack>
	<AC.CancelStackDuplication>Cancel stack duplication</AC.CancelStackDuplication>
	<AC.CancelStackDuplicationDesc>Cancel duplication of stored neural stack.</AC.CancelStackDuplicationDesc>
	<AC.CancelNeuralPrintRestoration>Cancel neural print restoration</AC.CancelNeuralPrintRestoration>
	<AC.CancelNeuralPrintRestorationDesc>Cancel stack restoration from neural print.</AC.CancelNeuralPrintRestorationDesc>
	<!-- ================================ Mod Settings ====================== -->
	<AC.EnableStackSpawning>Enable Stack Spawning</AC.EnableStackSpawning>
	<AC.EnableStackSpawningDesc>If disabled, Neural Stacks and Archostacks will NOT spawn on any pawns. You can still craft them, get them as rewards or trade for them.</AC.EnableStackSpawningDesc>
	<AC.EnableTechprintRequirement>Enable techprint requirements in research projects</AC.EnableTechprintRequirement>
	<AC.EnableTechprintRequirementDesc>Only affects Royalty owners!</AC.EnableTechprintRequirementDesc>
	<AC.TimeToGrowSleeveMultiplier>Time to grow sleeve multiplicator:</AC.TimeToGrowSleeveMultiplier>
	<AC.TimeToGrowSleeveMultiplierDesc>Multiplicator of the overall time needed to grow a new sleeve.</AC.TimeToGrowSleeveMultiplierDesc>
	<AC.CostToGrowSleeveMultiplier>Cost to grow sleeve multiplicator:</AC.CostToGrowSleeveMultiplier>
	<AC.CostToGrowSleeveMultiplierDesc>Multiplicator of the overall neutroamine cost needed to grow a new sleeve.</AC.CostToGrowSleeveMultiplierDesc>
	<AC.EnableStackDegradation>Enable Stack Degradation</AC.EnableStackDegradation>
	<AC.EnableStackDegradationDesc>If disabled, Neural Stacks can be edited to your heart's content without having to worry about stack degradation.</AC.EnableStackDegradationDesc>
	<AC.StackEditEditTimeValueMultiplier>Stack editing time gain multiplier:</AC.StackEditEditTimeValueMultiplier>
	<AC.StackEditEditTimeValueMultiplierDesc>Multiplicator of the overall stack editing time.</AC.StackEditEditTimeValueMultiplierDesc>
	<AC.StackEditDegradationValueMultiplier>Stack Degradation gain multiplier:</AC.StackEditDegradationValueMultiplier>
	<AC.StackEditDegradationValueMultiplierDesc>Multiplies the overall stack degradation that is accumulated through editing.</AC.StackEditDegradationValueMultiplierDesc>
	<AC.EnableArchostackEditing>Enable Archo Stack editing</AC.EnableArchostackEditing>
	<AC.EnableArchostackEditingDesc>Allows you to edit the content of Archo Stacks.</AC.EnableArchostackEditingDesc>
	<AC.ColonistStackNeedsExtracting>Colonist stack needs extracting.</AC.ColonistStackNeedsExtracting>
	<AC.ColonistStackNeedsExtractingDesc>These colonists are incapacitated on the ground:\n\n{0}\nSend another colonist to rescue them and carry them back to bed.\n\n(To rescue, select another colonist, then right click on the victim and select Rescue.)</AC.ColonistStackNeedsExtractingDesc>
	<AC.SleeveDeathDoesNotCauseGearTainting>Sleeve death doesn't cause gear to be tainted</AC.SleeveDeathDoesNotCauseGearTainting>
	<AC.EnableSoldNeuralPrintsCreatingPawnDuplicates>Selling neural prints can create duplicates</AC.EnableSoldNeuralPrintsCreatingPawnDuplicates>
	<AC.EnableSoldNeuralPrintsCreatingPawnDuplicatesDesc>text.todo</AC.EnableSoldNeuralPrintsCreatingPawnDuplicatesDesc>
	<AC.EnableNeuralPrintsInAncientDangers>Enable neural prints spawning in ancient dangers</AC.EnableNeuralPrintsInAncientDangers>
	<AC.EnableNeuralPrintsInAncientDangersDesc>text.todo</AC.EnableNeuralPrintsInAncientDangersDesc>
	<!-- ================================ Warnings ====================== -->
	<AC.CannotInstallStackOnAndroidWithoutNeuralModule>Cannot install stacks into androids without a neural module.</AC.CannotInstallStackOnAndroidWithoutNeuralModule>
	<AC.CannotInstallEmptyStackInEmptySleeve>Cannot install an empty stack into an empty sleeve.</AC.CannotInstallEmptyStackInEmptySleeve>
	<AC.CannotInstallStackInBodyOfThisRace>Cannot install stacks into this race: {0}.</AC.CannotInstallStackInBodyOfThisRace>
	<AC.CannotInstallStackInNonHumanlikes>Cannot install stacks into non-humanlikes.</AC.CannotInstallStackInNonHumanlikes>
	<AC.CannotInstallActiveStackInChildren>Cannot install an active stack into children.</AC.CannotInstallActiveStackInChildren>
	<AC.CannotInstallAlreadyHaveStack>Cannot install stack: Already has a stack installed.</AC.CannotInstallAlreadyHaveStack>
	<AC.RequiresArtificalParentPart>requires artifical parent part</AC.RequiresArtificalParentPart>
	<!-- ================================ Mental Fuse ====================== -->
	<AC.TriggeredMentalFuseLabel>Mental fuse ({PAWN_nameDef})</AC.TriggeredMentalFuseLabel>
	<AC.TriggeredMentalFuseText>{PAWN_nameDef}'s mental fuse has triggered, preventing a mental break.</AC.TriggeredMentalFuseText>
	<AC.MentalFuseTraumaLabel>Mental fuse trauma</AC.MentalFuseTraumaLabel>
	<AC.MentalFuseTraumaText>{PAWN_nameDef}'s mental fuse has caused permanent damage in {PAWN_objective} brain. This damage has caused {PAWN_objective} to develop strange savant-like abilities.</AC.MentalFuseTraumaText>
	<!-- ================================ Neural Connector ====================== -->
	<AC.RequiresNeuralStackInstalled>Requires neural stack installed.</AC.RequiresNeuralStackInstalled>
	<AC.CreateNeuralPrint>Create neural print</AC.CreateNeuralPrint>
	<AC.CreateSkilltrainer>Create skilltrainer</AC.CreateSkilltrainer>
	<AC.NotSufficientSkillLevels>Not sufficient skill levels</AC.NotSufficientSkillLevels>
	<AC.CreatingNeuralPrintCompleted>Creating neural print completed for {PAWN_nameDef}.</AC.CreatingNeuralPrintCompleted>
	<AC.CreatingSkilltrainerCompleted>Creating skilltrainer completed for {PAWN_nameDef}. {PAWN_nameDef}'s brain has been destroyed by the neural connector.</AC.CreatingSkilltrainerCompleted>
	<AC.ConfirmSkilltrainerPawn>Scanning {PAWN_nameDef} to create a skilltrainer will kill {PAWN_objective}. Are you sure you want to continue?</AC.ConfirmSkilltrainerPawn>
	<AC.ConfirmCancelSkilltrainerPawn>Cancelling a skilltrainer process will still kill {PAWN_nameDef}. Are you sure you want to continue?</AC.ConfirmCancelSkilltrainerPawn>
	<!-- ================================ Neural Cache ====================== -->
	<AC.EjectStackTooltip>Eject this neural stack from the array.</AC.EjectStackTooltip>
	<AC.EjectStackConfirmation>Do you really want to eject {0}? It will be immediately ejected onto the ground nearby.</AC.EjectStackConfirmation>
	<AC.StackStorage>Contents</AC.StackStorage>
	<AC.NeuralStacksInCache>Neural Stacks in cache: ({0}/{1})</AC.NeuralStacksInCache>
	<AC.AllowColonistStacks>*Allow colonist neural stacks</AC.AllowColonistStacks>
	<AC.AllowStrangerStacks>*Allow stranger neural stacks</AC.AllowStrangerStacks>
	<AC.AllowHostileStacks>*Allow hostile neural stacks</AC.AllowHostileStacks>
	<AC.AllowArchoStacks>*Allow archo stacks</AC.AllowArchoStacks>
</LanguageData>